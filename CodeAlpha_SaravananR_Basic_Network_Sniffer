from scapy.all import sniff, IP, TCP, UDP

def process_packet(packet):
    if IP in packet:
        ip_layer = packet[IP]
        src_ip = ip_layer.src
        dst_ip = ip_layer.dst
        proto = ip_layer.proto

        # Identify the protocol
        protocol = "Unknown"
        if proto == 6 and TCP in packet:
            protocol = "TCP"
        elif proto == 17 and UDP in packet:
            protocol = "UDP"

        # Get payload if any
        payload = bytes(packet[IP].payload)
        payload_display = payload[:50]  # First 50 bytes only for display

        print(f"\n[+] Packet Captured")
        print(f"Source IP: {src_ip}")
        print(f"Destination IP: {dst_ip}")
        print(f"Protocol: {protocol}")
        print(f"Payload (first 50 bytes): {payload_display}")

def main():
    print("Starting packet sniffer... Press Ctrl+C to stop.")
    sniff(filter="ip", prn=process_packet, store=0)

if __name__ == "__main__":
    main()
